CREATE DATABASE IF NOT EXISTS chatus CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
USE chatus;

-- Users table
CREATE TABLE users (
  user_id INT AUTO_INCREMENT PRIMARY KEY,
  username VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(255),
  email VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Friends table (many-to-many)
CREATE TABLE friends (
  user_id INT NOT NULL,
  friend_id INT NOT NULL,
  PRIMARY KEY (user_id, friend_id),
  CONSTRAINT fk_friends_user FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
  CONSTRAINT fk_friends_friend FOREIGN KEY (friend_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Groups table
CREATE TABLE groupes (
  group_id INT AUTO_INCREMENT PRIMARY KEY,
  group_name VARCHAR(255) NOT NULL UNIQUE
);

-- Group Messages
CREATE TABLE group_messages (
  message_id INT AUTO_INCREMENT PRIMARY KEY,
  group_id INT,
  sender_id INT,
  content TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_group_msg_group FOREIGN KEY (group_id) REFERENCES groupes(group_id) ON DELETE CASCADE,
  CONSTRAINT fk_group_msg_sender FOREIGN KEY (sender_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Group Users (many-to-many)
CREATE TABLE group_users (
  group_id INT NOT NULL,
  user_id INT NOT NULL,
  PRIMARY KEY (group_id, user_id),
  CONSTRAINT fk_group_users_group FOREIGN KEY (group_id) REFERENCES groupes(group_id) ON DELETE CASCADE,
  CONSTRAINT fk_group_users_user FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Messages (1-to-1 or user-to-user)
CREATE TABLE messages (
  message_id INT AUTO_INCREMENT PRIMARY KEY,
  sender_id INT,
  receiver_id INT,
  content TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  status ENUM('delivered', 'offline'),
  CONSTRAINT fk_msg_sender FOREIGN KEY (sender_id) REFERENCES users(user_id) ON DELETE CASCADE,
  CONSTRAINT fk_msg_receiver FOREIGN KEY (receiver_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Photos between users
CREATE TABLE photos (
  photo_id INT AUTO_INCREMENT PRIMARY KEY,
  sender_id INT NOT NULL,
  receiver_id INT NOT NULL,
  photo_data LONGBLOB NOT NULL,
  file_size BIGINT NOT NULL,
  file_name VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_photo_sender FOREIGN KEY (sender_id) REFERENCES users(user_id) ON DELETE CASCADE,
  CONSTRAINT fk_photo_receiver FOREIGN KEY (receiver_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Videos between users
CREATE TABLE videos (
  video_id INT AUTO_INCREMENT PRIMARY KEY,
  sender_id INT NOT NULL,
  receiver_id INT NOT NULL,
  video_data LONGBLOB NOT NULL,
  file_size BIGINT NOT NULL,
  file_name VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_video_sender FOREIGN KEY (sender_id) REFERENCES users(user_id) ON DELETE CASCADE,
  CONSTRAINT fk_video_receiver FOREIGN KEY (receiver_id) REFERENCES users(user_id) ON DELETE CASCADE
);

-- Files between users
CREATE TABLE files (
  file_id INT AUTO_INCREMENT PRIMARY KEY,
  sender_id INT NOT NULL,
  receiver_id INT NOT NULL,
  file_name VARCHAR(255) NOT NULL,
  file_data LONGBLOB NOT NULL,
  file_type VARCHAR(100) NOT NULL,
  file_size BIGINT NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT fk_file_sender FOREIGN KEY (sender_id) REFERENCES users(user_id) ON DELETE CASCADE,
  CONSTRAINT fk_file_receiver FOREIGN KEY (receiver_id) REFERENCES users(user_id) ON DELETE CASCADE
);

INSERT INTO users (username, password, email, created_at) VALUES
('alice', 'password123', 'alice@example.com', NOW()),
('bob', 'password456', 'bob@example.com', NOW()),
('charlie', 'password789', 'charlie@example.com', NOW());

-- Insert sample chat messages between users
INSERT INTO messages (sender_id, receiver_id, content, created_at, status) VALUES
-- Conversation between user_id 1 (alice) and user_id 2 (bob)
(1, 2, 'Hey Bob, how are you?', DATE_SUB(NOW(), INTERVAL 1 HOUR), 'delivered'),
(2, 1, 'Hi Alice! I''m good, thanks for asking. How about you?', DATE_SUB(NOW(), INTERVAL 55 MINUTE), 'delivered'),
(1, 2, 'I''m doing great! Working on a new project.', DATE_SUB(NOW(), INTERVAL 50 MINUTE), 'delivered'),
(2, 1, 'That sounds interesting! What kind of project?', DATE_SUB(NOW(), INTERVAL 45 MINUTE), 'delivered'),
(1, 2, 'It''s a chat application using JavaFX and MySQL.', DATE_SUB(NOW(), INTERVAL 40 MINUTE), 'delivered'),
(2, 1, 'Wow, that''s cool! I''d love to see it when it''s done.', DATE_SUB(NOW(), INTERVAL 35 MINUTE), 'delivered'),
(1, 2, 'Sure! I''ll share it with you once it''s ready.', DATE_SUB(NOW(), INTERVAL 30 MINUTE), 'delivered'),

-- Conversation between user_id 2 (bob) and user_id 3 (charlie)
(2, 3, 'Hey Charlie, are you coming to the meeting?', DATE_SUB(NOW(), INTERVAL 2 HOUR), 'delivered'),
(3, 2, 'Yes, I''ll be there in 10 minutes.', DATE_SUB(NOW(), INTERVAL 1 HOUR 55 MINUTE), 'delivered'),
(2, 3, 'Great! Don''t forget to bring the project files.', DATE_SUB(NOW(), INTERVAL 1 HOUR 50 MINUTE), 'delivered'),
(3, 2, 'I have them ready. See you soon!', DATE_SUB(NOW(), INTERVAL 1 HOUR 45 MINUTE), 'delivered'),

-- Conversation between user_id 1 (alice) and user_id 3 (charlie)
(1, 3, 'Hi Charlie, did you get the email I sent?', DATE_SUB(NOW(), INTERVAL 3 HOUR), 'delivered'),
(3, 1, 'Yes, I just replied to it.', DATE_SUB(NOW(), INTERVAL 2 HOUR 55 MINUTE), 'delivered'),
(1, 3, 'Perfect, thanks!', DATE_SUB(NOW(), INTERVAL 2 HOUR 50 MINUTE), 'delivered');

